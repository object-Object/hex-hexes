#include "./Reading_and_Writing.hexpattern"
#include "./List_Manipulation.hexpattern"

#define Minimization Distillation (SOUTH_WEST qaa) = num, num -> num
{
    Dioscuri Gambit
    Minimus Distillation
    Rotation Gambit II
    Augur's Exaltation
}

#define Maximization Distillation (SOUTH_EAST edd) = num, num -> num
{
    Dioscuri Gambit
    Maximus Distillation
    Rotation Gambit II
    Augur's Exaltation
}

#define Sign Purification (SOUTH_EAST awdda) = num -> 1 or 0 or -1
{
    Gemini Decomposition
    Numerical Reflection: 0
    Maximus Distillation
    Numerical Reflection: 1
    Numerical Reflection: 0
    Augur's Exaltation
    
    Jester's Gambit
    Numerical Reflection: 0
    Minimus Distillation
    Numerical Reflection: -1
    Rotation Gambit
    Augur's Exaltation
}

#define Vector Sign Purification (SOUTH_EAST awddaqqqq) = vec -> vec
// (sign(x), sign(y), sign(z))
{
    Vector Disintegration

    Sign Purification
    Rotation Gambit
    Sign Purification
    Rotation Gambit
    Sign Purification
    Rotation Gambit

    Vector Exaltation
}

#define Perpendicular Purification (EAST waeq) = vec -> vec
// returns a unit vector perpendicular to the input vector
{
    Gemini Decomposition
    Vector Reflection +X
    Additive Distillation
    Division Distillation

    Gemini Decomposition
    Length Purification
    Division Distillation
}

// #define Hadamard's Distillation (WEST awaqawa) = vec, vec -> vec
// (AxBx, AyBy, AzBz)
{
    Vector Disintegration
    Numerical Reflection: 4
    Fisherman's Gambit
    Vector Disintegration
    
    Numerical Reflection: 50
    Swindler's Gambit
    
    Multiplicative Distillation
    Rotation Gambit II
    Multiplicative Distillation
    
    Numerical Reflection: 22
    Swindler's Gambit
    Multiplicative Distillation
    
    Rotation Gambit II
    Vector Exaltation
}

#define Power Distillation II (NORTH_WEST wedewa) = num, num -> num
// b, x -> b^x, where 0^0 = 1
{
    Dioscuri Gambit
    Equality Distillation
    
    Prospector's Gambit
    Numerical Reflection: 0
    Equality Distillation
    
    Conjunction Distillation
    Negation Purification
    Rotation Gambit
    Numerical Reflection: 1
    Augur's Exaltation
    
    Jester's Gambit
    Power Distillation
}

#define Binomial Distillation (NORTH_EAST wdwaqawdw) = num, num -> num
// n, i -> nCi
{
    Dioscuri Gambit
    Subtractive Distillation
    Factorial Purification
    
    Jester's Gambit
    Factorial Purification
    Multiplicative Distillation
    
    Jester's Gambit
    Factorial Purification
    Jester's Gambit
    Division Distillation
}

#define Bezier's Distillation (NORTH_EAST eeeqqq) = [vec], num -> vec
// P, t -> B(t), where 0 <= t <= 1
// meta-eval: len(P)
{
    Muninn's Reflection
    Rotation Gambit II

    // find n and n+1
    Jester's Gambit
    Gemini Decomposition
    Abacus Purification

    Gemini Decomposition
    Numerical Reflection: 1
    Subtractive Distillation // P contains n+1 vectors, so subtract 1 from len(P)
    Rotation Gambit II
    
    // zip indices and control points
    Perfect Counter's Queue
    Jester's Gambit
    Numerical Zipper Distillation

    // calculate the summation
    {
        // unzip index and control point
        Flock's Disintegration
        Vector Exaltation

        // n-i
        Rotation Gambit II
        Dioscuri Gambit
        Subtractive Distillation

        // nCi
        Rotation Gambit II
        Undertaker's Gambit
        Binomial Distillation
        
        // t^i
        Rotation Gambit II
        Numerical Reflection: 5
        Fisherman's Gambit
        Undertaker's Gambit
        Jester's Gambit
        Power Distillation II
        
        // (1-t)^(n-i)
        Rotation Gambit II
        Numerical Reflection: 1
        Jester's Gambit
        Subtractive Distillation
        Jester's Gambit
        Power Distillation II
        
        // add (nCi * t^i * (1-t)^(n-i) * P) to the running total
        Multiplicative Distillation
        Multiplicative Distillation
        Multiplicative Distillation
        
        Vector Reflection Zero
        Muninn's Purification
        Additive Distillation
        Huginn's Gambit
    }
    Jester's Gambit
    Thoth's Gambit
    Bookkeeper's Gambit: vvv
    Muninn's Reflection

    Jester's Gambit
    Huginn's Gambit
}

#define Modulus Distillation II (NORTH_EAST daawdda) = num, num -> num
// modulo operator
// note: Modulus Distillation is remainder, not mod
{
    Undertaker's Gambit
    Modulus Distillation
    
    Gemini Decomposition
    Numerical Reflection: 0
    Maximus Distillation II
    Rotation Gambit II
    
    Jester's Gambit
    Length Purification
    Prospector's Gambit
    Additive Distillation

    Augur's Exaltation
}

#define Inverse Tangent Distillation (WEST qdaqqqqqw) = num, num -> num
// y, x -> atan2(y, x)
{
    Dioscuri Gambit
    Numerical Reflection: 0
    Minimus Distillation II
    
    Jester's Gambit
    Augur's Purification
    
    Dioscuri Gambit
    Negation Purification
    Conjunction Distillation

    Rotation Gambit II
    Conjunction Distillation
    
    Numerical Reflection: 16
    Swindler's Gambit

    Length Purification
    
    Dioscuri Gambit
    Numerical Reflection: 0
    Vector Exaltation
    Length Purification

    Additive Distillation
    
    Rotation Gambit
    {
        Jester's Gambit
        Bookkeeper's Gambit: -
    }
    Flock's Disintegration
    Augur's Exaltation
    Hermes' Gambit

    Division Distillation
    Inverse Tangent Purification
    Numerical Reflection: 2
    Multiplicative Distillation
    
    Arc's Reflection
    Jester's Gambit
    Augur's Exaltation
}
