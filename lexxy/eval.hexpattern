#include "../types/hexcasting.hexpattern"
#include "./parse.hexpattern"

#define Evaluate Lexxy = list -> any
// program -> return
{
    // parse program into AST
    // embed for easier editing
    {
        <Parse Lexxy>
    }
    Flock's Disintegration
    Hermes' Gambit

    // ravenmind: [env, ...]
    // innermost to outermost scope

    // standard env
    // [key, value, ...]
    {
        // constants

        True Reflection
        <true>
        
        False Reflection
        <false>

        Nullary Reflection
        <null>

        // existing patterns

        Additive Distillation
        Additive Distillation

        Subtractive Distillation
        Subtractive Distillation

        Multiplicative Distillation
        Multiplicative Distillation

        Division Distillation
        Division Distillation

        Equality Distillation
        Equality Distillation
        
        Inequality Distillation
        Inequality Distillation

        Maximus Distillation
        Maximus Distillation

        Maximus Distillation II
        Maximus Distillation II
        
        Minimus Distillation
        Minimus Distillation

        Minimus Distillation II
        Minimus Distillation II

        Reveal
        Reveal

        // built-in functions

        Hermes' Gambit
        <Lexxy Function: Do>
    }
    Single's Purification
    Huginn's Gambit

    // #define eval = eval, x -> ret
    Consideration: {
        {
            <pattern type>
            <list type>
        }
        Prospector's Gambit
        Classifier's Purification
        Locator's Distillation
        Numerical Reflection: 1
        Additive Distillation
        
        {
            // constant
            // return x
        }
        {
            // pattern
            // look up variable in environment
            {
                // get key index
                Gemini Decomposition
                Rotation Gambit
                Locator's Distillation
                
                // if variable found, add 1 to get the index of the value
                // otherwise add 0 so we get null on lookup
                Gemini Decomposition
                Numerical Reflection: -1
                Maximus Distillation
                Numerical Reflection: 1
                Numerical Reflection: 0
                Augur's Exaltation
                Additive Distillation
                
                // get value
                Selection Distillation
                
                // break if not null
                Gemini Decomposition
                Nullary Reflection
                Equality Distillation
                {
                    Charon's Gambit
                }
                Speaker's Decomposition
                Augur's Exaltation
                Hermes' Gambit
            }
            Muninn's Reflection
            Thoth's Gambit
            Derivation Decomposition
            Bookkeeper's Gambit: vv-
        }
        {
            // list

            // execute builtins if necessary, else execute procedure
            {
                <WEST qqqa> // quote (consideration without the last segment)
                Augur's Exaltation // if
                Huginn's Gambit // define
                Brigh's Gambit // lambda
            }
            Prospector's Gambit
            Numerical Reflection: 0
            Selection Distillation
            Locator's Distillation
            Numerical Reflection: 1
            Additive Distillation

            // procedure
            {
                // evaluate everything in the list
                {
                    Flock's Reflection
                    Flock's Gambit
                    Derivation Decomposition
                    Jester's Gambit
                    Derivation Decomposition
                    Bookkeeper's Gambit: v-
                    Undertaker's Gambit
                    Hermes' Gambit
                }
                Jester's Gambit
                Thoth's Gambit
                
                // call the procedure within thoth so it gets its own stack (for varargs)
                Speaker's Decomposition
                Integration Distillation
                Single's Purification
                {
                    Flock's Reflection
                    Flock's Gambit
                    Derivation Decomposition
                    Bookkeeper's Gambit: v-
                    Flock's Disintegration
                    Hermes' Gambit
                }
                Jester's Gambit
                Thoth's Gambit
                Derivation Decomposition
                Bookkeeper's Gambit: v-
            }
            // quote
            {
                // return list[1]
                Numerical Reflection: 1
                Selection Distillation
            }
            // if
            {
                Flock's Disintegration
                Bookkeeper's Gambit: v---

                // evaluate condition
                Rotation Gambit
                Numerical Reflection: 3
                Fisherman's Gambit II
                Undertaker's Gambit
                Hermes' Gambit
                
                // evaluate whichever case we chose
                Augur's Purification
                Rotation Gambit II
                Augur's Exaltation
                Prospector's Gambit
                Hermes' Gambit
                
                // push null in place of eval for later, since we just popped it
                Nullary Reflection
                Jester's Gambit
            }
            // define
            {
                Flock's Disintegration
                Bookkeeper's Gambit: v--
                
                // evaluate value
                Numerical Reflection: 2
                Fisherman's Gambit II
                Undertaker's Gambit
                Hermes' Gambit

                // add symbol to env
                // TODO: this is inefficient if the symbol already exists - we should overwrite in that case
                Numerical Reflection: 2
                Flock's Gambit

                Muninn's Reflection
                Speaker's Decomposition
                Rotation Gambit
                Jester's Gambit
                Additive Distillation
                Speaker's Distillation
                Huginn's Gambit

                // return null
                Nullary Reflection
            }
            // lambda
            {

            }
            Numerical Reflection: 5
            Flock's Gambit
            Jester's Gambit
            Selection Distillation
            Hermes' Gambit
        }
        Numerical Reflection: 3
        Flock's Gambit
        Jester's Gambit
        Selection Distillation
        Hermes' Gambit
        Bookkeeper's Gambit: v-
    Consideration: }
    Undertaker's Gambit
    Hermes' Gambit
}
