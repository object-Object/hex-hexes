#include "../types/hexcasting.hexpattern"
#include "./parse.hexpattern"

#define Evaluate Lexxy = list -> any
// program -> return
{
    // parse program into AST
    // embed for easier editing
    {
        <Parse Lexxy>
    }
    Flock's Disintegration
    Hermes' Gambit

    // ravenmind: [[env, ...], eval]
    // innermost to outermost scope

    // standard env
    // [key, value, ...]
    {
        // constants

        True Reflection
        <true>
        
        False Reflection
        <false>

        Nullary Reflection
        <null>

        Arc's Reflection
        <pi>

        Circle's Reflection
        <tau>

        Euler's Reflection
        <e>

        Vector Reflection +X
        <(1, 0, 0)>

        Vector Reflection +Y
        <(0, 1, 0)>

        Vector Reflection +Z
        <(0, 0, 1)>

        Vector Reflection -X
        <(-1, 0, 0)>

        Vector Reflection -Y
        <(0, -1, 0)>

        Vector Reflection -Z
        <(0, 0, -1)>

        Vector Reflection Zero
        <(0, 0, 0)>

        // built-in functions

        Hermes' Gambit
        <Lexxy Function: Do>
    }
    Single's Purification

    // #define eval = eval, x -> ret
    Consideration: {
        {
            <pattern type>
            <list type>
        }
        Prospector's Gambit
        Classifier's Purification
        Locator's Distillation
        Numerical Reflection: 1
        Additive Distillation
        
        {
            // constant
            // return x
        }
        {
            // pattern
            // look up variable in environment
            {
                // get index of key
                Dioscuri Gambit
                Jester's Gambit
                Locator's Distillation
                
                // get value from next index after key
                Undertaker's Gambit
                Numerical Reflection: 1
                Additive Distillation
                Selection Distillation
                
                // break if the key was found
                // otherwise leave the key at the top of the stack
                // (mostly so we don't have to embed every pattern in the standard env)
                Jester's Gambit
                Numerical Reflection: -1
                Maximus Distillation
                {
                    Charon's Gambit
                    Bookkeeper's Gambit: v
                }
                Flock's Disintegration
                Augur's Exaltation
                Hermes' Gambit
            }
            Muninn's Reflection
            Numerical Reflection: 0
            Selection Distillation
            Thoth's Gambit
            Derivation Decomposition
            Bookkeeper's Gambit: vv-
        }
        {
            // list

            // execute builtins if necessary, else execute procedure
            {
                <WEST qqqa> // quote (consideration without the last segment)
                Augur's Exaltation // if
                Huginn's Gambit // define
                Brigh's Gambit // lambda
            }
            Prospector's Gambit
            Numerical Reflection: 0
            Selection Distillation
            Locator's Distillation
            Numerical Reflection: 1
            Additive Distillation

            // procedure
            {
                // evaluate everything in the list
                {
                    Flock's Reflection
                    Flock's Gambit
                    Derivation Decomposition
                    Bookkeeper's Gambit: v-
                    
                    Muninn's Reflection
                    Numerical Reflection: 1
                    Selection Distillation
                    Hermes' Gambit
                }
                Jester's Gambit
                Thoth's Gambit
                
                // call the procedure within thoth so it gets its own stack (for varargs)
                Speaker's Decomposition
                Integration Distillation
                Single's Purification
                {
                    Flock's Reflection
                    Flock's Gambit
                    Derivation Decomposition
                    Bookkeeper's Gambit: v-
                    Flock's Disintegration
                    Hermes' Gambit
                }
                Jester's Gambit
                Thoth's Gambit
                Derivation Decomposition
                Bookkeeper's Gambit: v-
            }
            // quote
            {
                // return list[1]
                Numerical Reflection: 1
                Selection Distillation
            }
            // if
            {
                Flock's Disintegration
                Bookkeeper's Gambit: v---

                // evaluate condition
                Rotation Gambit
                Muninn's Reflection
                Numerical Reflection: 1
                Selection Distillation
                Hermes' Gambit
                
                // evaluate whichever case we chose
                Augur's Purification
                Rotation Gambit II
                Augur's Exaltation
                Muninn's Reflection
                Numerical Reflection: 1
                Selection Distillation
                Hermes' Gambit
            }
            // define
            {
                Flock's Disintegration
                Bookkeeper's Gambit: v--
                
                // evaluate value
                Muninn's Reflection
                Numerical Reflection: 1
                Selection Distillation
                Hermes' Gambit

                // add symbol to env
                // TODO: this is inefficient if the symbol already exists - we should overwrite in that case
                Numerical Reflection: 2
                Flock's Gambit

                Muninn's Reflection
                Speaker's Decomposition
                Speaker's Decomposition

                Numerical Reflection: 3
                Fisherman's Gambit
                Jester's Gambit
                Additive Distillation

                Speaker's Distillation
                Speaker's Distillation
                Huginn's Gambit

                // return null
                Nullary Reflection
            }
            // lambda
            {

            }
            Numerical Reflection: 5
            Flock's Gambit
            Jester's Gambit
            Selection Distillation
            Hermes' Gambit
        }
        Numerical Reflection: 3
        Flock's Gambit
        Jester's Gambit
        Selection Distillation
        Hermes' Gambit
    Consideration: }

    Undertaker's Gambit
    Numerical Reflection: 2
    Flock's Gambit
    Huginn's Gambit
    
    Hermes' Gambit
}
